// Copyright (C) 2020  The Mirage Authors
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Function arguments
pushdef(`ptr1', `$r10')
pushdef(`ptr2', `$r11')
pushdef(`size', `$r12')

// Locals
pushdef(`word1', `$r13')
pushdef(`word2', `$r14')
pushdef(`result', `$r10')

//
// Compares two blocks of memory.
//
// Arguments:
//   $r10 - The start address of the first buffer in DMEM.
//   $r11 - The start address of the second buffer in DMEM.
//   $r12 - The number of bytes to compare. Should be a multiple of 4.
//
// To check the result of the operation, use $r10 after the function call.
// A value of 0 indicates success, 1 indicates failure.
//
// Destroys $r10-$r14.
//
memcmp:
    // Branch to the start of the compare loop.
    lbra #memcmp_compare_loop_start

    memcmp_compare_loop:
        // Read two words from DMEM into registers and compare them.
        ld b32 word1 D[ptr1]
        ld b32 word2 D[ptr2]
        cmp b32 word1 word2
        bra ne #memcmp_ret_failure

        // Update the arguments and continue to compare data if there are
        // still words left.
        add b32 ptr1 0x4
        add b32 ptr2 0x4
        sub b32 size 0x4
        memcmp_compare_loop_start:
            bra b32 size 0x0 ne #memcmp_compare_loop

    memcmp_ret_success:
        mov result 0x0
        ret

    memcmp_ret_failure:
        mov result 0x1
        ret

// End locals
popdef(`result')
popdef(`word2')
popdef(`word1')

// End function arguments
popdef(`size')
popdef(`ptr2')
popdef(`ptr1')
